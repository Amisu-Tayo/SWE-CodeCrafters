AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  DBHostParam:
    Type: String
  DBUserParam:
    Type: String
  DBPassParam:
    Type: String
  DBNameParam:
    Type: String

Resources:
  MainApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'https://fims.store'"
        AllowCredentials: true

  FimaiFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile.lambda
      DockerContext: fimai
    Properties:
      PackageType: Image
      Timeout: 90
      ImageConfig:
        Command: ["fimai.handler"]
      Environment:
        Variables:
          DB_HOST: !Ref DBHostParam
          DB_USER: !Ref DBUserParam
          DB_PASS: !Ref DBPassParam
          DB_NAME: !Ref DBNameParam
      Events:
        FimaiApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/fimai
            Method: GET
        FimaiChatApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/fimai/chat
            Method: POST

  InventoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: inventory.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST: !Ref DBHostParam
          DB_USER: !Ref DBUserParam
          DB_PASS: !Ref DBPassParam
          DB_NAME: !Ref DBNameParam
      Events:
        InventoryApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/inventory
            Method: ANY

  InventoryItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: inventory_item.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST: !Ref DBHostParam
          DB_USER: !Ref DBUserParam
          DB_PASS: !Ref DBPassParam
          DB_NAME: !Ref DBNameParam
      Events:
        InventoryItemApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/inventory/{fid}
            Method: ANY

  OrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: orders.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST: !Ref DBHostParam
          DB_USER: !Ref DBUserParam
          DB_PASS: !Ref DBPassParam
          DB_NAME: !Ref DBNameParam
      Events:
        OrdersApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/orders
            Method: ANY

  OrderItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: order_item.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST: !Ref DBHostParam
          DB_USER: !Ref DBUserParam
          DB_PASS: !Ref DBPassParam
          DB_NAME: !Ref DBNameParam
      Events:
        OrderItemApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/orders/{oid}
            Method: ANY

  UsageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: usage.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST: !Ref DBHostParam
          DB_USER: !Ref DBUserParam
          DB_PASS: !Ref DBPassParam
          DB_NAME: !Ref DBNameParam
      Events:
        UsageApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/usage
            Method: GET

  ReportsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: reports.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST: !Ref DBHostParam
          DB_USER: !Ref DBUserParam
          DB_PASS: !Ref DBPassParam
          DB_NAME: !Ref DBNameParam
      Events:
        ReportsApi:
          Type: Api
          Properties:
            RestApiId: !Ref MainApi
            Path: /api/reports
            Method: GET

Outputs:
  FimaiApiUrl:
    Value: !Sub "https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/fimai"
  FimaiChatUrl:
    Value: !Sub "https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/fimai/chat"
  InventoryApiUrl:
    Value: !Sub "https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/inventory"
  OrdersApiUrl:
    Value: !Sub "https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/orders"
  UsageApiUrl:
    Value: !Sub "https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/usage"
  ReportsApiUrl:
    Value: !Sub "https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/reports"