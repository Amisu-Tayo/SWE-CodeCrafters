AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  DBHostParam:
    Type: String
  DBUserParam:
    Type: String
  DBPassParam:
    Type: String
  DBNameParam:
    Type: String
Resources:
  MainApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: '''OPTIONS,GET,POST,PUT,DELETE'''
        AllowHeaders: '''Content-Type,Authorization'''
        AllowOrigin: '''https://fims.store'''
        AllowCredentials: true
  FimaiFunction:
    Type: AWS::Serverless::Function
    Metadata:
      DockerContext: /Users/tayo/Documents/School_Stuff/Tayo/Spring 2025 Classes/Software
        Engineering/SWE-CodeCrafters/lambda_src/fimai
      Dockerfile: Dockerfile.lambda
      SamResourceId: FimaiFunction
    Properties:
      PackageType: Image
      Timeout: 90
      ImageConfig:
        Command:
        - fimai.handler
      Environment:
        Variables:
          DB_HOST:
            Ref: DBHostParam
          DB_USER:
            Ref: DBUserParam
          DB_PASS:
            Ref: DBPassParam
          DB_NAME:
            Ref: DBNameParam
      Events:
        FimaiApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/fimai
            Method: ANY
        FimaiChatApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/fimai/chat
            Method: ANY
      ImageUri: fimaifunction:latest
  InventoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: InventoryFunction
      Handler: inventory.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST:
            Ref: DBHostParam
          DB_USER:
            Ref: DBUserParam
          DB_PASS:
            Ref: DBPassParam
          DB_NAME:
            Ref: DBNameParam
      Events:
        InventoryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/inventory
            Method: ANY
    Metadata:
      SamResourceId: InventoryFunction
  InventoryItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: InventoryItemFunction
      Handler: inventory_item.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST:
            Ref: DBHostParam
          DB_USER:
            Ref: DBUserParam
          DB_PASS:
            Ref: DBPassParam
          DB_NAME:
            Ref: DBNameParam
      Events:
        InventoryItemApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/inventory/{fid}
            Method: ANY
    Metadata:
      SamResourceId: InventoryItemFunction
  OrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: OrdersFunction
      Handler: orders.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST:
            Ref: DBHostParam
          DB_USER:
            Ref: DBUserParam
          DB_PASS:
            Ref: DBPassParam
          DB_NAME:
            Ref: DBNameParam
      Events:
        OrdersApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/orders
            Method: ANY
    Metadata:
      SamResourceId: OrdersFunction
  OrderItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: OrderItemFunction
      Handler: order_item.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST:
            Ref: DBHostParam
          DB_USER:
            Ref: DBUserParam
          DB_PASS:
            Ref: DBPassParam
          DB_NAME:
            Ref: DBNameParam
      Events:
        OrderItemApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/orders/{oid}
            Method: ANY
    Metadata:
      SamResourceId: OrderItemFunction
  UsageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UsageFunction
      Handler: usage.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST:
            Ref: DBHostParam
          DB_USER:
            Ref: DBUserParam
          DB_PASS:
            Ref: DBPassParam
          DB_NAME:
            Ref: DBNameParam
      Events:
        UsageApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/usage
            Method: GET
    Metadata:
      SamResourceId: UsageFunction
  ReportsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ReportsFunction
      Handler: reports.handler
      Runtime: python3.9
      Environment:
        Variables:
          DB_HOST:
            Ref: DBHostParam
          DB_USER:
            Ref: DBUserParam
          DB_PASS:
            Ref: DBPassParam
          DB_NAME:
            Ref: DBNameParam
      Events:
        ReportsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: MainApi
            Path: /api/reports
            Method: GET
    Metadata:
      SamResourceId: ReportsFunction
Outputs:
  FimaiApiUrl:
    Value:
      Fn::Sub: https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/fimai
  FimaiChatUrl:
    Value:
      Fn::Sub: https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/fimai/chat
  InventoryApiUrl:
    Value:
      Fn::Sub: https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/inventory
  OrdersApiUrl:
    Value:
      Fn::Sub: https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/orders
  UsageApiUrl:
    Value:
      Fn::Sub: https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/usage
  ReportsApiUrl:
    Value:
      Fn::Sub: https://${MainApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/reports
